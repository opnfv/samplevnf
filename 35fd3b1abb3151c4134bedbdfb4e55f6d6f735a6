{
  "comments": [
    {
      "key": {
        "uuid": "9a3d3df0_3cba9fde",
        "filename": "VNFs/DPPD-PROX/handle_ipv6_tunnel.c",
        "patchSetId": 3
      },
      "lineNbr": 406,
      "author": {
        "id": 6899
      },
      "writtenOn": "2017-10-30T14:29:22Z",
      "side": 1,
      "message": "Do we need to reset fragment_offset? If we receive a packet with a (wrong) fragment_offset, then I think that we should still  transmit it as such. Is the problem not the fact the received packet is wrong? If the received packet is wrong, I do not think we should fix it. But in NSB/PROX we should make sure the generator sends a proper packet, i.e. with a proper fragment_offset and a good checksum.",
      "revId": "35fd3b1abb3151c4134bedbdfb4e55f6d6f735a6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_8279c631",
        "filename": "VNFs/DPPD-PROX/handle_ipv6_tunnel.c",
        "patchSetId": 3
      },
      "lineNbr": 406,
      "author": {
        "id": 6751
      },
      "writtenOn": "2017-10-31T16:45:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a3d3df0_3cba9fde",
      "revId": "35fd3b1abb3151c4134bedbdfb4e55f6d6f735a6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_9cce4b82",
        "filename": "VNFs/DPPD-PROX/handle_ipv6_tunnel.c",
        "patchSetId": 3
      },
      "lineNbr": 414,
      "author": {
        "id": 6899
      },
      "writtenOn": "2017-10-30T14:29:22Z",
      "side": 1,
      "message": "I think comment is wrong - we do not update TTL when decapsulating.",
      "revId": "35fd3b1abb3151c4134bedbdfb4e55f6d6f735a6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_e276d23d",
        "filename": "VNFs/DPPD-PROX/handle_ipv6_tunnel.c",
        "patchSetId": 3
      },
      "lineNbr": 414,
      "author": {
        "id": 6751
      },
      "writtenOn": "2017-10-31T16:45:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a3d3df0_9cce4b82",
      "revId": "35fd3b1abb3151c4134bedbdfb4e55f6d6f735a6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_1ca23bae",
        "filename": "VNFs/DPPD-PROX/handle_ipv6_tunnel.c",
        "patchSetId": 3
      },
      "lineNbr": 415,
      "author": {
        "id": 6899
      },
      "writtenOn": "2017-10-30T14:29:22Z",
      "side": 1,
      "message": "Great catch that lwaftr does not work properly in openstack. I think that the main issue is within the generator, where the generated packet has the checksum set to 0. I understand that the proposed fix would...make the use case to work, but I believe that if we receive a bad packet (with a bad checksum), we should not \"fix\" it (i.e. write a good checksum) but we should drop the packet (what the switch is doing). \nBut we should make sure that the packet generated by the generator is correct. If using gen_4_over_6.pl, then I think we simply need to add computeChecksums method for the IPv4 layer.",
      "revId": "35fd3b1abb3151c4134bedbdfb4e55f6d6f735a6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_c273ce4b",
        "filename": "VNFs/DPPD-PROX/handle_ipv6_tunnel.c",
        "patchSetId": 3
      },
      "lineNbr": 415,
      "author": {
        "id": 6751
      },
      "writtenOn": "2017-10-31T16:45:03Z",
      "side": 1,
      "message": "In this case we are not using gen_4_over_6.pl\nThe packet comes from a gen.cfg file.\n\nI understand what you mean by dropping packet with bad checksum. However I can not see a \"nice\" way of generating a checksum for an inline encapsulated packet.\n\nWhat about adding a switch to PROX or compile flag to specify the generating of the checksum? Would this be acceptable to you?",
      "parentUuid": "9a3d3df0_1ca23bae",
      "revId": "35fd3b1abb3151c4134bedbdfb4e55f6d6f735a6",
      "serverId": "bbac25d2-bf60-4904-9ba8-a72fc000d6c5",
      "unresolved": false
    }
  ]
}